/*    +----------------------------------------------------------------------+   | RendermanXML                                                         |   +----------------------------------------------------------------------+   | Copyright (c) 2004 Cyberroadie                                       |   +----------------------------------------------------------------------+   | This source file is subject to version 2 of the GNU General Public   |   | License, that is bundled with this package in the file LICENSE.      |   |                                                                      |   | This program is free software; you can redistribute it and/or modify |   | it under the terms of the GNU General Public License as published by |   | the Free Software Foundation; either version 2 of the License, or    |   | (at your option) any later version.                                  |   |                                                                      |   | This program is distributed in the hope that it will be useful,      |   | but WITHOUT ANY WARRANTY; without even the implied warranty of       |   | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        |   | GNU General Public License for more details.                         |   |                                                                      |   | You should have received a copy of the GNU General Public License    |   | along with this program; if not, write to the Free Software          |   | Foundation, Inc., 59 Temple Place, Suite 330, Boston,                |   | MA  02111-1307  USA                                                  |   |                                                                      |   +----------------------------------------------------------------------+   | Author: Olivier Van Acker <cyberroadie@yahoo.co.uk>                  |   +----------------------------------------------------------------------+*/package net.transformatorhuis.cgi.conversion;import java.io.*;class Rib2Xml {    public static void main(String[] argv) {        // is there anything to do?        if (argv.length == 0) {            printUsage();            System.exit(1);        }        try {                new Rib2Xml(new FileReader(argv[0]));        } catch (IOException ex) {                System.out.println("File (" + argv[0] + ") not found");                System.exit(1);        } catch (Exception er) {            System.out.println(er.toString());        }            }        public Rib2Xml(FileReader ribFileReader) {        String line;        String appendLine;        String factoryInput;        int lineNumber = 0;        BufferedReader bR = new BufferedReader(ribFileReader);        RibFactory ribFactory = new RibFactory();                try {            while((line = bR.readLine()) != null) {                                      // Remove comments and whitespace                   factoryInput = line.replaceFirst("#.+","").trim();                                      // Remove version line                   factoryInput = factoryInput.replaceFirst("version.+","").trim();                                      // Threat everything between brackets as a singel line                   if(factoryInput.indexOf('[') != -1 && factoryInput.indexOf(']') == -1) {                        while((appendLine = bR.readLine()).indexOf(']') == -1) {                            factoryInput += appendLine.trim();                        }                                                // Again, otherwise we miss the line with the closing bracket                        factoryInput += appendLine.trim();                                                // Create a single line                        factoryInput.replace('\r',' ');                   }                                      if(factoryInput.length() != 0) {                       lineNumber++;                       Rib rib = ribFactory.getRibElement(factoryInput);                       System.out.println(lineNumber + ": " + rib.output());                   }            }        } catch (IOException ex) {            System.out.println(ex.toString());        }            }    private static void printUsage() {            System.err.println("Usage: java -jar ribxml.jar [rib file]");    }    }