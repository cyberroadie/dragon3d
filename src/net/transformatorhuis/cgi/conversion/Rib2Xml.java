/*    +----------------------------------------------------------------------+   | RendermanXML                                                         |   +----------------------------------------------------------------------+   | Copyright (c) 2004 Cyberroadie                                       |   +----------------------------------------------------------------------+   | This source file is subject to version 2 of the GNU General Public   |   | License, that is bundled with this package in the file LICENSE.      |   |                                                                      |   | This program is free software; you can redistribute it and/or modify |   | it under the terms of the GNU General Public License as published by |   | the Free Software Foundation; either version 2 of the License, or    |   | (at your option) any later version.                                  |   |                                                                      |   | This program is distributed in the hope that it will be useful,      |   | but WITHOUT ANY WARRANTY; without even the implied warranty of       |   | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        |   | GNU General Public License for more details.                         |   |                                                                      |   | You should have received a copy of the GNU General Public License    |   | along with this program; if not, write to the Free Software          |   | Foundation, Inc., 59 Temple Place, Suite 330, Boston,                |   | MA  02111-1307  USA                                                  |   |                                                                      |   +----------------------------------------------------------------------+   | Author: Olivier Van Acker <cyberroadie@yahoo.co.uk>                  |   +----------------------------------------------------------------------+*/package net.transformatorhuis.cgi.conversion;import java.io.*;class Rib2Xml {    public static void main(String[] argv) {        // is there anything to do?        if (argv.length == 0) {            printUsage();            System.exit(1);        }        try {                new Rib2Xml(new FileInputStream(argv[0]));        } catch (IOException ex) {                System.out.println("File (" + argv[0] + ") not found");                System.exit(1);        } catch (Exception er) {            System.out.println(er.toString());        }            }                public Rib2Xml(FileInputStream ribFileInputStream) {        StreamTokenizer thTokens = new StreamTokenizer(ribFileInputStream);        //thTokens.resetSyntax();        thTokens.commentChar('#');        thTokens.eolIsSignificant(false);        thTokens.parseNumbers();        thTokens.ordinaryChar('[');        thTokens.ordinaryChar(']');        thTokens.quoteChar('"');        int count = 0;        try {            while(thTokens.nextToken() != StreamTokenizer.TT_EOF) {                //System.out.println(thTokens.lineno() + ": " + thTokens.sval + ": ttype: " + thTokens.ttype);                if(thTokens.ttype == StreamTokenizer.TT_NUMBER) {                    System.out.println(thTokens.lineno() + ": " + thTokens.nval);                    count++;                } else if (thTokens.ttype == StreamTokenizer.TT_WORD) {                    System.out.println(thTokens.lineno() + ": " + thTokens.sval);                    count++;                } else {                    if(thTokens.ttype != '"') {                        System.out.println(thTokens.lineno() + ": " + (char) thTokens.ttype);                        count++;                    } else if(thTokens.sval != null ) {                        System.out.println(thTokens.lineno() + ": " + (char) thTokens.ttype + thTokens.sval + (char) thTokens.ttype);                        count++;                    }                }                            }        } catch (Exception ex) {            System.out.println("End of file reached");        }                System.out.println("Tokens: " + count);    }    private static void printUsage() {            System.err.println("Usage: java -jar ribxml.jar [rib file]");    }    }